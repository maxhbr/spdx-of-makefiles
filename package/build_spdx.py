import re
import os
import sys
import csv
import json
import logging
from datetime import datetime, timezone
import subprocess
import multiprocessing
from collections import defaultdict
from pathlib import Path

from . import spdx3_0 as spdx

class SPDXBuilder:
    def __init__(self, src_dir, out_dir):
        self.src_dir = src_dir
        self.logger = logging.getLogger('SPDXBuilder')
        self.logger.setLevel(logging.DEBUG)
        self.logger.addHandler(logging.StreamHandler())

        document = None

        self.creation_info = self.get_creation_info()

    def get_creation_info(self):
        self.logger.info('Getting creation info')
        info = spdx.CreationInfo()
        info.created = datetime.now(timezone.utc)
        info.comment = 'SPDX data generated by SPDXBuilder'
        info.specVersion = '3.0.0'
        # TODO: fill createdUsing
        return info

    def start_document(self):
        document = spdx.SpdxDocument()
        document.spdxId = 'SPDXRef-DOCUMENT'
        document.creationInfo = self.creation_info

        return document

    def build_doc(self):
        self.logger.info('Building SPDX data')
        document = self.start_document()

        self.logger.info('SPDX data have been built')
        return document

# def debug_spdx(doc):
#     self.logger.info('Debugging SPDX data')
#     for obj in self.objects:
#         self.logger.debug(obj)

def write_spdx(doc, out_dir):
    if not os.path.exists(out_dir):
        os.makedirs(out_dir)
    out_file = Path(os.path.join(out_dir, 'spdx.jsonld'))
    with out_file.open("wb") as f:
        s = spdx.JSONLDSerializer()
        s.write(doc, f)

def main():
    src_dir = sys.argv[1]
    out_dir = sys.argv[2]

    builder = SPDXBuilder(src_dir, out_dir)
    doc = builder.build_doc()

    write_spdx(doc, out_dir)
